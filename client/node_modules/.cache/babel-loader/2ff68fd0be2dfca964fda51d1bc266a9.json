{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nconst CLIENT_ID = '06108a62c9b6496eb46b41193b915681'; // Your client id\n\nconst REDIRECT_URI = 'http://localhost:3000/callback'; // Your redirect uri\n\nconst AUTH = \"https://accounts.spotify.com/authorize\";\nconst SCOPES = [\"playlist-modify-public\", \"playlist-modify-private\"];\nconst SPACE_DELIMITER = \"%20\";\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER);\n_c = SCOPES_URL_PARAM;\nconst RESPONSE_TYPE = \"token\"; // http://localhost:3000/callback#access_token=BQARUP-WSdzIFmRlQ69zQz4VWgrxcuPWIS5LWSOWBYUnMoVG6_agmhkVD3SVp7CPS2Sa3RYrvtgc7O3LNuroztEfOZ0Pbwpi1rSfzPanJRmi6OnxxzPy1M-f2gITh7zofJFoE9xoT6pQUUDCAiLwMf9k7yF9Vjj3XVLXwgLdzjAhGQjk_zHpJjHjOtHfb8cvd7IPxJnQY-8frbX93eBhZw&token_type=Bearer&expires_in=3600\n\nexport const handleLogin = () => {\n  window.location = `${AUTH}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`;\n};\nexport const Authenticate = () => {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n\n    setToken(token);\n  }, []);\n};\n\n_s(Authenticate, \"uRWVyxPfKU3Lv5uAeNftFtP/ZvU=\");\n\n_c2 = Authenticate;\n\nconst getUsername = callback => {\n  console.log('getUsername');\n  var url = 'https://api.spotify.com/v1/me';\n  $.ajax(url, {\n    dataType: 'json',\n    headers: {\n      'Authorization': 'Bearer ' + g_access_token\n    },\n    success: function (r) {\n      console.log('got username response', r);\n      callback(r.id);\n    },\n    error: function (r) {\n      callback(null);\n    }\n  });\n};\n\nconst createPlaylist = (username, name, callback) => {\n  console.log('createPlaylist', username, name);\n  var url = 'https://api.spotify.com/v1/users/' + username + '/playlists';\n  $.ajax(url, {\n    method: 'POST',\n    data: JSON.stringify({\n      'name': name,\n      'public': false\n    }),\n    dataType: 'json',\n    headers: {\n      'Authorization': 'Bearer ' + g_access_token,\n      'Content-Type': 'application/json'\n    },\n    success: function (r) {\n      console.log('create playlist response', r);\n      callback(r.id);\n    },\n    error: function (r) {\n      callback(null);\n    }\n  });\n};\n\nconst addTracksToPlaylist = (username, playlist, tracks, callback) => {\n  console.log('addTracksToPlaylist', username, playlist, tracks);\n  var url = 'https://api.spotify.com/v1/users/' + username + '/playlists/' + playlist + '/tracks'; // ?uris='+encodeURIComponent(tracks.join(','));\n\n  $.ajax(url, {\n    method: 'POST',\n    data: JSON.stringify(tracks),\n    dataType: 'text',\n    headers: {\n      'Authorization': 'Bearer ' + g_access_token,\n      'Content-Type': 'application/json'\n    },\n    success: function (r) {\n      console.log('add track response', r);\n      callback(r.id);\n    },\n    error: function (r) {\n      callback(null);\n    }\n  });\n};\n\nconst doit = () => {\n  // parse hash\n  var hash = location.hash.replace(/#/g, '');\n  var fullHash = hash.split('&');\n  var args = {};\n  fullHash.forEach(function (keyvalue) {\n    var idx = keyvalue.indexOf('=');\n    var key = keyvalue.substring(0, idx);\n    var val = keyvalue.substring(idx + 1);\n    args[key] = val;\n  });\n  playlistName = localStorage.getItem('createplaylist-name');\n  playlistTracks = JSON.parse(localStorage.getItem('createplaylist-tracks'));\n  console.log('got args', args);\n\n  if (typeof args['access_token'] != 'undefined') {\n    // got access token\n    console.log('got access token', args['access_token']);\n    g_access_token = args['access_token'];\n  }\n\n  getUsername(function (username) {\n    console.log('got username', username);\n    createPlaylist(username, playlistName, function (playlist) {\n      console.log('created playlist', playlist);\n      addTracksToPlaylist(username, playlist, playlistTracks, function () {\n        console.log('tracks added.');\n        $('#playlistlink').attr('href', 'spotify:user:' + username + ':playlist:' + playlist);\n        $('#creating').hide();\n        $('#done').show();\n      });\n    });\n  });\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SCOPES_URL_PARAM\");\n$RefreshReg$(_c2, \"Authenticate\");","map":{"version":3,"names":["useState","useEffect","CLIENT_ID","REDIRECT_URI","AUTH","SCOPES","SPACE_DELIMITER","SCOPES_URL_PARAM","join","RESPONSE_TYPE","handleLogin","window","location","Authenticate","token","setToken","hash","localStorage","getItem","substring","split","find","elem","startsWith","setItem","getUsername","callback","console","log","url","$","ajax","dataType","headers","g_access_token","success","r","id","error","createPlaylist","username","name","method","data","JSON","stringify","addTracksToPlaylist","playlist","tracks","doit","replace","fullHash","args","forEach","keyvalue","idx","indexOf","key","val","playlistName","playlistTracks","parse","attr","hide","show"],"sources":["/Users/katiesidebotham/Desktop/genie/Genie/src/constants/auth.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst CLIENT_ID = '06108a62c9b6496eb46b41193b915681'; // Your client id\nconst REDIRECT_URI = 'http://localhost:3000/callback'; // Your redirect uri\nconst AUTH = \"https://accounts.spotify.com/authorize\"\nconst SCOPES = [\"playlist-modify-public\", \"playlist-modify-private\"]\nconst SPACE_DELIMITER = \"%20\"\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER)\nconst RESPONSE_TYPE = \"token\"\n\n\n\n// http://localhost:3000/callback#access_token=BQARUP-WSdzIFmRlQ69zQz4VWgrxcuPWIS5LWSOWBYUnMoVG6_agmhkVD3SVp7CPS2Sa3RYrvtgc7O3LNuroztEfOZ0Pbwpi1rSfzPanJRmi6OnxxzPy1M-f2gITh7zofJFoE9xoT6pQUUDCAiLwMf9k7yF9Vjj3XVLXwgLdzjAhGQjk_zHpJjHjOtHfb8cvd7IPxJnQY-8frbX93eBhZw&token_type=Bearer&expires_in=3600\nexport const handleLogin = () => {\n    window.location = `${AUTH}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`;\n  };\n\n\nexport const Authenticate = () => {\n    const [token, setToken] = useState(\"\")\n    useEffect(() => {\n        const hash = window.location.hash\n        let token = window.localStorage.getItem(\"token\")\n\n        if (!token && hash) {\n            token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n            window.location.hash = \"\"\n            window.localStorage.setItem(\"token\", token)\n        }\n        setToken(token)\n\n\n    }, [])\n}\n\nconst getUsername = (callback) => {\n    console.log('getUsername');\n    var url = 'https://api.spotify.com/v1/me';\n    $.ajax(url, {\n      dataType: 'json',\n      headers: {\n        'Authorization': 'Bearer ' + g_access_token\n      },\n      success: function(r) {\n        console.log('got username response', r);\n        callback(r.id);\n      },\n      error: function(r) {\n        callback(null);\n      }\n    });\n  }\n\n  const createPlaylist = (username, name, callback)=> {\n    console.log('createPlaylist', username, name);\n    var url = 'https://api.spotify.com/v1/users/' + username +\n      '/playlists';\n    $.ajax(url, {\n      method: 'POST',\n      data: JSON.stringify({\n        'name': name,\n        'public': false\n      }),\n      dataType: 'json',\n      headers: {\n        'Authorization': 'Bearer ' + g_access_token,\n        'Content-Type': 'application/json'\n      },\n      success: function(r) {\n        console.log('create playlist response', r);\n        callback(r.id);\n      },\n      error: function(r) {\n        callback(null);\n      }\n    });\n  }\n  \n  const addTracksToPlaylist = (username, playlist, tracks, callback) => {\n    console.log('addTracksToPlaylist', username, playlist, tracks);\n    var url = 'https://api.spotify.com/v1/users/' + username +\n      '/playlists/' + playlist +\n      '/tracks'; // ?uris='+encodeURIComponent(tracks.join(','));\n    $.ajax(url, {\n      method: 'POST',\n      data: JSON.stringify(tracks),\n      dataType: 'text',\n      headers: {\n        'Authorization': 'Bearer ' + g_access_token,\n        'Content-Type': 'application/json'\n      },\n      success: function(r) {\n        console.log('add track response', r);\n        callback(r.id);\n      },\n      error: function(r) {\n        callback(null);\n      }\n    });\n  }\n  \n  const doit = () => {\n    // parse hash\n    var hash = location.hash.replace(/#/g, '');\n    var fullHash = hash.split('&');\n    var args = {};\n    fullHash.forEach(function(keyvalue) {\n      var idx = keyvalue.indexOf('=');\n      var key = keyvalue.substring(0, idx);\n      var val = keyvalue.substring(idx + 1);\n      args[key] = val;\n    });\n  \n    playlistName = localStorage.getItem('createplaylist-name');\n    playlistTracks = JSON.parse(localStorage.getItem('createplaylist-tracks'));\n  \n    console.log('got args', args);\n  \n    if (typeof(args['access_token']) != 'undefined') {\n      // got access token\n      console.log('got access token', args['access_token']);\n      g_access_token = args['access_token'];\n    }\n  \n    getUsername(function(username) {\n      console.log('got username', username);\n      createPlaylist(username, playlistName, function(playlist) {\n        console.log('created playlist', playlist);\n        addTracksToPlaylist(username, playlist, playlistTracks, function() {\n          console.log('tracks added.');\n          $('#playlistlink').attr('href', 'spotify:user:'+username+':playlist:'+playlist);\n          $('#creating').hide();\n          $('#done').show();\n        });\n      });\n    });\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}